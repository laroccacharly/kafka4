services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server broker:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    container_name: producer
    depends_on:
      broker:
        condition: service_healthy
    volumes:
      - ./produce.py:/app/produce.py
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:9092
      SERVICE_TYPE: producer

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: consumer
    depends_on:
      broker:
        condition: service_healthy
    volumes:
      - ./consume.py:/app/consume.py
      - ./data:/app/data
      - ./checkpoints:/app/checkpoints
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:9092
      SPARK_LOCAL_IP: consumer
      SPARK_LOCAL_HOSTNAME: consumer
      SPARK_MASTER: local[*]
      SERVICE_TYPE: consumer
    
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api
    ports:
      - "5111:5000"
    depends_on:
      broker:
        condition: service_healthy


volumes:
  spark-checkpoint:
    driver: local 